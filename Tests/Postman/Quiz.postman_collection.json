{
	"info": {
		"_postman_id": "e906381c-06fc-4c22-808c-546d2a5ea106",
		"name": "Quiz",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Common user permissions",
			"item": [
				{
					"name": "Users scenario",
					"item": [
						{
							"name": "Register",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).to.eql(\"Rejestracja przebiegła pomyślnie!\");\r",
											"});\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const random_number = _.random(1000, 9000);\r",
											"const user_email = \"user\" + random_number + \"@example.com\";\r",
											"\r",
											"const random_password = _.random(100000,9000000);\r",
											"const user_password = random_password + \"@\";\r",
											"\r",
											"pm.environment.set(\"user_email\", user_email);\r",
											"pm.environment.set(\"user_password\", user_password);\r",
											"\r",
											"let genders_array = [\"Kobieta\", \"Mężczyzna\" ]; \r",
											"const random_gender = _.random(0, 1)\r",
											"const user_gender = genders_array[random_gender]\r",
											"\r",
											"pm.environment.set(\"user_gender\", user_gender);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_email\": \"{{user_email}}\",\r\n    \"user_password\": \"{{user_password}}\",\r\n    \"confirm_password\": \"{{user_password}}\",\r\n    \"user_gender\": \"{{user_gender}}\",\r\n    \"user_verification\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/users/register",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"\r",
											"let bodyData = JSON.parse(responseBody);\r",
											"const token = bodyData.Token;\r",
											"pm.environment.set(\"token\", token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_email\": \"{{user_email}}\",\r\n    \"user_password\": \"{{user_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/users/login",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PUT request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"\r",
											"let bodyData = JSON.parse(responseBody);\r",
											"const token = bodyData.Token;\r",
											"pm.environment.set(\"token\", token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const random_number = _.random(1000, 9000);\r",
											"const new_user_email = \"newUser\" + random_number + \"@example.com\";\r",
											"\r",
											"pm.environment.set(\"new_user_email\", new_user_email);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"new_user_email\": \"{{new_user_email}}\",\r\n    \"user_password\": \"{{user_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/users/email",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"users",
										"email"
									]
								}
							},
							"response": []
						},
						{
							"name": "Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const random_number = _.random(100000,9000000);\r",
											"const new_user_password = \"password\" + random_number + \"@\";\r",
											"\r",
											"pm.environment.set(\"new_user_password\", new_user_password);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PUT request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"\r",
											"let bodyData = JSON.parse(responseBody);\r",
											"const token = bodyData.Token;\r",
											"pm.environment.set(\"token\", token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"new_user_password\": \"{{new_user_password}}\",\r\n    \"confirm_new_user_password\": \"{{new_user_password}}\",\r\n    \"user_password\": \"{{user_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/users/password",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"users",
										"password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PUT request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Error).to.eql(\"Coś poszło nie tak. Sprawdź wprowadzone dane!\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_password\": \"{{user_password}}\",\r\n    \"confirm_password\": \"{{user_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/users/delete",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"users",
										"delete"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "School subjects scenario",
					"item": [
						{
							"name": "All school subjects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful GET request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/subjects",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"subjects"
									]
								}
							},
							"response": []
						},
						{
							"name": "All chapters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful GET request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/chapters",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"chapters"
									]
								}
							},
							"response": []
						},
						{
							"name": "All topics",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful GET request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/topics",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"topics"
									]
								}
							},
							"response": []
						},
						{
							"name": "New chapter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Error).to.eql(\"Nie posiadasz uprawnień, by móc dodać nowy rodział!\");\r",
											"});\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name_of_subject\": \"Geografia\",\r\n    \"name_of_chapter\": \"Lądy\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/chapter",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"chapter"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Teacher permissions",
			"item": [
				{
					"name": "Users scenario",
					"item": [
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});\r",
											"\r",
											"let bodyData = JSON.parse(responseBody);\r",
											"const teacherToken = bodyData.Token;\r",
											"pm.environment.set(\"teacherToken\", teacherToken);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const teacher_email = \"teacher@example.com\";\r",
											"const teacher_password = \"teacher@\";\r",
											"\r",
											"pm.environment.set(\"teacher_email\", teacher_email);\r",
											"pm.environment.set(\"teacher_password\",teacher_password);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_email\": \"{{teacher_email}}\",\r\n    \"user_password\": \"{{teacher_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/users/login",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"users",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "School subjects scenario - 1",
					"item": [
						{
							"name": "All school subjects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful GET request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/subjects",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"subjects"
									]
								}
							},
							"response": []
						},
						{
							"name": "All chapters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful GET request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/chapters",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"chapters"
									]
								}
							},
							"response": []
						},
						{
							"name": "All topics",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful GET request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/topics",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"topics"
									]
								}
							},
							"response": []
						},
						{
							"name": "New chapter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const name_of_subject = \"Geografia\";\r",
											"const name_of_chapter = \"newChapter\" + _.random(0,10000);\r",
											"\r",
											"pm.environment.set(\"name_of_subject\", name_of_subject);\r",
											"pm.environment.set(\"name_of_chapter\", name_of_chapter);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name_of_subject\": \"{{name_of_subject}}\",\r\n    \"name_of_chapter\": \"{{name_of_chapter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/chapter",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"chapter"
									]
								}
							},
							"response": []
						},
						{
							"name": "New topic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const name_of_topic = \"newTopic\" + _.random(0,10000);\r",
											"\r",
											"pm.environment.set(\"name_of_topic\", name_of_topic);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name_of_chapter\": \"{{name_of_chapter}}\",\r\n    \"name_of_topic\": \"{{name_of_topic}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/topic",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"topic"
									]
								}
							},
							"response": []
						},
						{
							"name": "Chapter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful PUT request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name_of_chapter\": \"{{name_of_chapter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/update-chapter",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"update-chapter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Topics",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).to.eql(\"Pomyślnie usunięto temat!\");\r",
											"});\r",
											"pm.test(\"Successful PUT request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name_of_topic\": \"{{name_of_topic}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/update-topic",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"update-topic"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "School subjects scenario - 2",
					"item": [
						{
							"name": "All school subjects",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful GET request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/subjects",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"subjects"
									]
								}
							},
							"response": []
						},
						{
							"name": "All chapters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful GET request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/chapters",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"chapters"
									]
								}
							},
							"response": []
						},
						{
							"name": "All topics",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful GET request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/topics",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"topics"
									]
								}
							},
							"response": []
						},
						{
							"name": "New chapter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const name_of_subject = \"Geografia\";\r",
											"const name_of_chapter = \"newChapter\" + _.random(0,10000);\r",
											"\r",
											"pm.environment.set(\"name_of_subject\", name_of_subject);\r",
											"pm.environment.set(\"name_of_chapter\", name_of_chapter);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name_of_subject\": \"{{name_of_subject}}\",\r\n    \"name_of_chapter\": \"{{name_of_chapter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/chapter",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"chapter"
									]
								}
							},
							"response": []
						},
						{
							"name": "Chapter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.Message).not.eql(null);\r",
											"});\r",
											"pm.test(\"Successful PUT request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{teacherToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name_of_chapter\": \"{{name_of_chapter}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3000/quiz/schoolSubjects/update-chapter",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"quiz",
										"schoolSubjects",
										"update-chapter"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Admin permissions",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"\r",
									"let bodyData = JSON.parse(responseBody);\r",
									"const adminToken = bodyData.Token;\r",
									"pm.environment.set(\"adminToken\", adminToken);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const admin_email = \"admin@example.com\";\r",
									"const admin_password = \"admin@\";\r",
									"\r",
									"pm.environment.set(\"admin_email\", admin_email);\r",
									"pm.environment.set(\"admin_password\", admin_password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user_email\": \"{{admin_email}}\",\r\n    \"user_password\": \"{{admin_password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/quiz/users/login",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"quiz",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "School subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const name_of_school_subject = \"schoolSubject\" + _.random(0,10000);\r",
									"\r",
									"pm.environment.set(\"name_of_school_subject\", name_of_school_subject);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name_of_school_subject\": \"{{name_of_school_subject}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/quiz/administration/schoolSubject",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"quiz",
								"administration",
								"schoolSubject"
							]
						}
					},
					"response": []
				},
				{
					"name": "Subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Message).not.eql(null);\r",
									"});\r",
									"pm.test(\"Successful DELETE request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name_of_school_subject\": \"newSchoolSubject3951\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/quiz/administration/subject",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"quiz",
								"administration",
								"subject"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}